##################################################
# file: CommonService_server.py
#
# skeleton generated by "ZSI.generate.wsdl2dispatch.ServiceModuleWriter"
#      /usr/local/bin/wsdl2py common.asmx.xml
#
##################################################

from ZSI.schema import GED, GTD
from ZSI.TCcompound import ComplexType, Struct
from CommonService_types import *
from ZSI.ServiceContainer import ServiceSOAPBinding

# Messages  
GetVersionInfoSoapIn = GED("http://s.mappoint.net/mappoint-30/", "GetVersionInfo").pyclass

GetVersionInfoSoapOut = GED("http://s.mappoint.net/mappoint-30/", "GetVersionInfoResponse").pyclass

GetCountryRegionInfoSoapIn = GED("http://s.mappoint.net/mappoint-30/", "GetCountryRegionInfo").pyclass

GetCountryRegionInfoSoapOut = GED("http://s.mappoint.net/mappoint-30/", "GetCountryRegionInfoResponse").pyclass

GetEntityTypesSoapIn = GED("http://s.mappoint.net/mappoint-30/", "GetEntityTypes").pyclass

GetEntityTypesSoapOut = GED("http://s.mappoint.net/mappoint-30/", "GetEntityTypesResponse").pyclass

GetDataSourceInfoSoapIn = GED("http://s.mappoint.net/mappoint-30/", "GetDataSourceInfo").pyclass

GetDataSourceInfoSoapOut = GED("http://s.mappoint.net/mappoint-30/", "GetDataSourceInfoResponse").pyclass

GetGreatCircleDistancesSoapIn = GED("http://s.mappoint.net/mappoint-30/", "GetGreatCircleDistances").pyclass

GetGreatCircleDistancesSoapOut = GED("http://s.mappoint.net/mappoint-30/", "GetGreatCircleDistancesResponse").pyclass

GetClientTokenSoapIn = GED("http://s.mappoint.net/mappoint-30/", "GetClientToken").pyclass

GetClientTokenSoapOut = GED("http://s.mappoint.net/mappoint-30/", "GetClientTokenResponse").pyclass


# Service Skeletons
class CommonService(ServiceSOAPBinding):
    soapAction = {}
    root = {}

    def __init__(self, post='/find-30/common.asmx', **kw):
        ServiceSOAPBinding.__init__(self, post)

    def soap_GetVersionInfo(self, ps, **kw):
        request = ps.Parse(GetVersionInfoSoapIn.typecode)
        return request,GetVersionInfoSoapOut()

    soapAction['http://s.mappoint.net/mappoint-30/GetVersionInfo'] = 'soap_GetVersionInfo'
    root[(GetVersionInfoSoapIn.typecode.nspname,GetVersionInfoSoapIn.typecode.pname)] = 'soap_GetVersionInfo'

    def soap_GetCountryRegionInfo(self, ps, **kw):
        request = ps.Parse(GetCountryRegionInfoSoapIn.typecode)
        return request,GetCountryRegionInfoSoapOut()

    soapAction['http://s.mappoint.net/mappoint-30/GetCountryRegionInfo'] = 'soap_GetCountryRegionInfo'
    root[(GetCountryRegionInfoSoapIn.typecode.nspname,GetCountryRegionInfoSoapIn.typecode.pname)] = 'soap_GetCountryRegionInfo'

    def soap_GetEntityTypes(self, ps, **kw):
        request = ps.Parse(GetEntityTypesSoapIn.typecode)
        return request,GetEntityTypesSoapOut()

    soapAction['http://s.mappoint.net/mappoint-30/GetEntityTypes'] = 'soap_GetEntityTypes'
    root[(GetEntityTypesSoapIn.typecode.nspname,GetEntityTypesSoapIn.typecode.pname)] = 'soap_GetEntityTypes'

    def soap_GetDataSourceInfo(self, ps, **kw):
        request = ps.Parse(GetDataSourceInfoSoapIn.typecode)
        return request,GetDataSourceInfoSoapOut()

    soapAction['http://s.mappoint.net/mappoint-30/GetDataSourceInfo'] = 'soap_GetDataSourceInfo'
    root[(GetDataSourceInfoSoapIn.typecode.nspname,GetDataSourceInfoSoapIn.typecode.pname)] = 'soap_GetDataSourceInfo'

    def soap_GetGreatCircleDistances(self, ps, **kw):
        request = ps.Parse(GetGreatCircleDistancesSoapIn.typecode)
        return request,GetGreatCircleDistancesSoapOut()

    soapAction['http://s.mappoint.net/mappoint-30/GetGreatCircleDistances'] = 'soap_GetGreatCircleDistances'
    root[(GetGreatCircleDistancesSoapIn.typecode.nspname,GetGreatCircleDistancesSoapIn.typecode.pname)] = 'soap_GetGreatCircleDistances'

    def soap_GetClientToken(self, ps, **kw):
        request = ps.Parse(GetClientTokenSoapIn.typecode)
        return request,GetClientTokenSoapOut()

    soapAction['http://s.mappoint.net/mappoint-30/GetClientToken'] = 'soap_GetClientToken'
    root[(GetClientTokenSoapIn.typecode.nspname,GetClientTokenSoapIn.typecode.pname)] = 'soap_GetClientToken'

